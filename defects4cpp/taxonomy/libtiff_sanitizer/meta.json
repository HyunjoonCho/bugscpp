{
  "info": {
    "url": "https://github.com/vadz/libtiff.git",
    "short-desc": "This software provides support for the Tag Image File Format (TIFF), a widely used format for storing image data. Sanitizer enabled.",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure CFLAGS=\"-fsanitize=address,undefined\"",
            "make clean",
            "make -j @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure CFLAGS=\"--coverage -fsanitize=address,undefined -g -O0\"",
            "make clean",
            "make -j @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "test-type": "ctest",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"cd test; make check-TESTS --no-print-directory TESTS=$(make print-TESTS | cut -d ' ' -f $(cat ../DPP_TEST_INDEX))\""
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"cd test; make check-TESTS --no-print-directory TESTS=$(make print-TESTS | cut -d ' ' -f $(cat ../DPP_TEST_INDEX))\""
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "mkdir gcov",
            "bash -c 'find . -type f -name \"*.o\" -execdir gcov --preserve-paths  {} \\;'",
            "bash -c 'find /home/workspace/ -type f -name \"*.gcov\" -execdir mv {} /home/workspace/gcov \\;'",
            "bash -c 'find /home/workspace/ -type f -name \"*.gcda\" -delete'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "hash": "5ed9fea523316c2f5cec4d393e4d5d671c2dbc33",
      "num_cases": 81,
      "case": [],
      "description": "tools/tiff2ps.c: fix 2 heap-based buffer overflows (in PSDataBW and PSDataColorConfig).",
      "extra_tests": [
        [
          {
            "type": "docker",
            "lines": [
              "bash -c \"tools/tiff2ps .dpp/00107-libtiff-heapoverflow-PSDataColorContig\""
            ],
            "is_pass": false
          }
        ]
      ]
    },
    {
      "hash": "c7153361a4041260719b340f73f2f76b0969235c",
      "num_cases": 81,
      "case": [],
      "description": "tools/tiff2pdf.c: avoid potential heap-based overflow in t2p_readwrite_pdf_image_tile().",
      "extra_tests": [
        [
          {
            "type": "docker",
            "lines": [
              "bash -c \"tools/tiff2pdf .dpp/00112-libtiff-heapoverflow-_TIFFmemcpy\""
            ],
            "is_pass": false
          }
        ]
      ]
    },
    {
      "hash": "0a76a8c765c7b8327c59646284fa78c3c27e5490",
      "num_cases": 81,
      "case": [],
      "description": "libtiff/tif_jpeg.c: validate BitsPerSample in JPEGSetupEncode() to avoid undefined behaviour caused by invalid shift exponent.",
      "extra_tests": [
        [
          {
            "type": "docker",
            "lines": [
              "bash -c \"tools/tiffcp -i .dpp/00119-libtiff-shift-long-tif_jpeg /tmp/foo; [ $? -eq 1 ]\""
            ],
            "is_pass": false
          }
        ]
      ]
    }
  ]
}
